<Window x:Class="SistemaChamadosWpf.Views.ChamadoDetalhesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="Detalhes do Chamado"
        Height="560"
        Width="760"
        WindowStartupLocation="CenterOwner"
        WindowState="Maximized"
        Background="#F5F6FA">

    <!-- ========= Recursos ========= -->
    <Window.Resources>
        <!-- Cores base -->
        <SolidColorBrush x:Key="BrandBlack" Color="#121212"/>
        <SolidColorBrush x:Key="CardBrush"  Color="White"/>
        <SolidColorBrush x:Key="CardBorder" Color="#E0E0E0"/>

        <!-- Paleta psicologia das cores -->
        <SolidColorBrush x:Key="BluePrimary"   Color="#2962FF"/>
        <SolidColorBrush x:Key="BlueHover"     Color="#1E4BDB"/>
        <SolidColorBrush x:Key="BluePressed"   Color="#1539A8"/>

        <SolidColorBrush x:Key="GreenSuccess"  Color="#43A047"/>
        <SolidColorBrush x:Key="GreenHover"    Color="#2E7D32"/>
        <SolidColorBrush x:Key="GreenPressed"  Color="#1B5E20"/>

        <SolidColorBrush x:Key="AmberAttention" Color="#FB8C00"/>
        <SolidColorBrush x:Key="AmberHover"     Color="#EF6C00"/>
        <SolidColorBrush x:Key="AmberPressed"   Color="#E65100"/>

        <SolidColorBrush x:Key="DangerBase"    Color="#E53935"/>
        <SolidColorBrush x:Key="DangerHover"   Color="#C62828"/>
        <SolidColorBrush x:Key="DangerPressed" Color="#B71C1C"/>

        <!-- Botões padronizados -->
        <Style x:Key="AppButton" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource BluePrimary}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bg"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonPressedBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="#FFFFFFCC"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Variantes -->
        <Style x:Key="BtnPrimary" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource BluePrimary}"/>
            <Style.Resources>
                <SolidColorBrush x:Key="ButtonHoverBrush"   Color="{Binding Source={StaticResource BlueHover},   Path=Color}"/>
                <SolidColorBrush x:Key="ButtonPressedBrush" Color="{Binding Source={StaticResource BluePressed}, Path=Color}"/>
            </Style.Resources>
        </Style>

        <Style x:Key="BtnSuccess" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource GreenSuccess}"/>
            <Style.Resources>
                <SolidColorBrush x:Key="ButtonHoverBrush"   Color="{Binding Source={StaticResource GreenHover},   Path=Color}"/>
                <SolidColorBrush x:Key="ButtonPressedBrush" Color="{Binding Source={StaticResource GreenPressed}, Path=Color}"/>
            </Style.Resources>
        </Style>

        <Style x:Key="BtnAttention" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource AmberAttention}"/>
            <Style.Resources>
                <SolidColorBrush x:Key="ButtonHoverBrush"   Color="{Binding Source={StaticResource AmberHover},   Path=Color}"/>
                <SolidColorBrush x:Key="ButtonPressedBrush" Color="{Binding Source={StaticResource AmberPressed}, Path=Color}"/>
            </Style.Resources>
        </Style>

        <Style x:Key="BtnDanger" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource DangerBase}"/>
            <Style.Resources>
                <SolidColorBrush x:Key="ButtonHoverBrush"   Color="{Binding Source={StaticResource DangerHover},   Path=Color}"/>
                <SolidColorBrush x:Key="ButtonPressedBrush" Color="{Binding Source={StaticResource DangerPressed}, Path=Color}"/>
            </Style.Resources>
        </Style>

        <!-- Neutro para 'Voltar' -->
        <SolidColorBrush x:Key="NeutralGray"    Color="#607D8B"/>
        <SolidColorBrush x:Key="NeutralHover"   Color="#546E7A"/>
        <SolidColorBrush x:Key="NeutralPressed" Color="#455A64"/>
        <Style x:Key="BtnNeutral" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource NeutralGray}"/>
            <Style.Resources>
                <SolidColorBrush x:Key="ButtonHoverBrush"   Color="{Binding Source={StaticResource NeutralHover},   Path=Color}"/>
                <SolidColorBrush x:Key="ButtonPressedBrush" Color="{Binding Source={StaticResource NeutralPressed}, Path=Color}"/>
            </Style.Resources>
        </Style>

        <!-- Títulos e metadados (FALTAVAM) -->
        <Style x:Key="SectionTitle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#263238"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>
        <Style x:Key="MetaLabel" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#455A64"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        <Style x:Key="MetaValue" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#263238"/>
        </Style>

        <!-- Watermark TextBox (FALTAVA) -->
        <Style x:Key="WatermarkTextBox" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                            <TextBlock x:Name="Watermark"
                                       Text="Escreva um comentário... (Ctrl+Enter para enviar)"
                                       Foreground="#9E9E9E"
                                       Margin="6,4,6,4"
                                       IsHitTestVisible="False"
                                       Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Watermark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ====== LISTA DOS 7 STATUS ====== -->
        <x:Array x:Key="StatusList" Type="{x:Type sys:String}">
            <sys:String>Aberto</sys:String>
            <sys:String>EmAndamento</sys:String>
            <sys:String>Resolvido</sys:String>
            <sys:String>Fechado</sys:String>
            <sys:String>AguardandoRetorno</sys:String>
            <sys:String>Pausado</sys:String>
            
        </x:Array>

        <!-- Chip de status -->
        <DataTemplate x:Key="StatusChipTemplate">
            <Border x:Name="Chip" CornerRadius="10" Padding="10,4" Background="#EAECEF">
                <TextBlock x:Name="Txt" Text="{Binding Status}" FontWeight="SemiBold" Foreground="#222"/>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Aberto">
                    <Setter TargetName="Chip" Property="Background" Value="#E8F5E9"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#2E7D32"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Status}" Value="EmAndamento">
                    <Setter TargetName="Chip" Property="Background" Value="#FFF3E0"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#EF6C00"/>
                    <Setter TargetName="Txt"  Property="Text" Value="Em andamento"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Status}" Value="Resolvido">
                    <Setter TargetName="Chip" Property="Background" Value="#E0F7FA"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#006064"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Status}" Value="Fechado">
                    <Setter TargetName="Chip" Property="Background" Value="#FFEBEE"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#C62828"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Status}" Value="AguardandoRetorno">
                    <Setter TargetName="Chip" Property="Background" Value="#FFFDE7"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#F9A825"/>
                    <Setter TargetName="Txt"  Property="Text" Value="Aguardando retorno"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Status}" Value="Pausado">
                    <Setter TargetName="Chip" Property="Background" Value="#E3F2FD"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#1565C0"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Status}" Value="Encerrado">
                    <Setter TargetName="Chip" Property="Background" Value="#ECEFF1"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#37474F"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>

    <!-- ========= Layout ========= -->
    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- ===== App Bar ===== -->
        <Border Grid.Row="0" Background="{StaticResource BrandBlack}" CornerRadius="12" Padding="12" Margin="0,0,0,12">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Título + meta -->
                <StackPanel Grid.Column="0">
                    <TextBlock Text="{Binding Chamado.Titulo}" Foreground="White" FontSize="18" FontWeight="Bold"/>
                    <TextBlock Text="{Binding Chamado.Descricao}" Foreground="#E0E0E0" Margin="0,4,0,0" TextWrapping="Wrap" MaxHeight="48"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                        <TextBlock Text="ID: " Foreground="#B0BEC5" FontWeight="SemiBold"/>
                        <TextBlock Text="{Binding Chamado.Id}" Foreground="#CFD8DC"/>
                        <TextBlock Text="   •   " Foreground="#90A4AE"/>
                        <TextBlock Text="Aberto em: " Foreground="#B0BEC5" FontWeight="SemiBold"/>
                        <TextBlock Text="{Binding Chamado.DataCriacao, StringFormat=dd/MM/yyyy HH:mm}" Foreground="#CFD8DC"/>
                    </StackPanel>
                </StackPanel>

                <!-- Status chip -->
                <ContentPresenter Grid.Column="1"
                                  VerticalAlignment="Center"
                                  Content="{Binding Chamado}"
                                  ContentTemplate="{StaticResource StatusChipTemplate}"/>
            </Grid>
        </Border>

        <!-- ===== Conteúdo ===== -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <!-- Esquerda: descrição + comentários -->
            <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <!-- Card: Descrição e metadados -->
                    <Border Background="{StaticResource CardBrush}" BorderBrush="{StaticResource CardBorder}" BorderThickness="1"
                            CornerRadius="12" Padding="14" Margin="0,0,0,12">
                        <StackPanel>
                            <TextBlock Text="Descrição" Style="{StaticResource SectionTitle}"/>
                            <TextBlock Text="{Binding Chamado.Descricao}" TextWrapping="Wrap"/>
                            <Separator Margin="0,12,0,10"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="Solicitante:" Grid.Row="0" Grid.Column="0" Style="{StaticResource MetaLabel}" Margin="0,0,8,6"/>
                                <TextBlock Text="{Binding Chamado.Usuario.NomeCompleto}" Grid.Row="0" Grid.Column="1" Style="{StaticResource MetaValue}" Margin="0,0,0,6"/>

                                <TextBlock Text="Responsável:" Grid.Row="1" Grid.Column="0" Style="{StaticResource MetaLabel}" Margin="0,0,8,6"/>
                                <TextBlock Text="{Binding Chamado.Responsavel.NomeCompleto}" Grid.Row="1" Grid.Column="1" Style="{StaticResource MetaValue}" Margin="0,0,0,6"/>

                                <TextBlock Text="Última atualização:" Grid.Row="2" Grid.Column="0" Style="{StaticResource MetaLabel}" Margin="0,0,8,0"/>
                                <TextBlock Text="{Binding Chamado.DataAtualizacao, StringFormat=dd/MM/yyyy HH:mm}" Grid.Row="2" Grid.Column="1" Style="{StaticResource MetaValue}"/>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <!-- Card: Comentários -->
                    <Border Background="{StaticResource CardBrush}" BorderBrush="{StaticResource CardBorder}" BorderThickness="1"
                            CornerRadius="12" Padding="14">
                        <StackPanel>
                            <TextBlock Text="Comentários" Style="{StaticResource SectionTitle}"/>

                            <ListBox ItemsSource="{Binding Comentarios}" Margin="0,0,0,10"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="#E0E0E0" BorderThickness="1" CornerRadius="10" Padding="10" Margin="0,0,0,10" Background="#FAFAFA">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                                    <TextBlock Text="{Binding Usuario.NomeCompleto}" FontWeight="Bold"/>
                                                    <TextBlock Text="  •  " Foreground="#9E9E9E"/>
                                                    <TextBlock Text="{Binding DataCriacao, StringFormat=dd/MM/yyyy HH:mm}" Foreground="#757575"/>
                                                </StackPanel>
                                                <TextBlock Text="{Binding Texto}" TextWrapping="Wrap" Margin="0,4,0,0"/>
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <!-- Novo comentário -->
                            <TextBlock Text="Novo comentário" Style="{StaticResource SectionTitle}" Margin="0,0,0,6"/>
                            <TextBox Style="{StaticResource WatermarkTextBox}"
                                     Text="{Binding NovoComentarioTexto, UpdateSourceTrigger=PropertyChanged}"
                                     Height="90" TextWrapping="Wrap" AcceptsReturn="True"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                                <Button Style="{StaticResource BtnPrimary}" Content="Adicionar Comentário"
                                        Command="{Binding AdicionarComentarioCommand}"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </ScrollViewer>

            <!-- Splitter -->
            <GridSplitter Grid.Column="1" Width="6" Background="#E0E0E0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

            <!-- Direita: resumo + ações -->
            <StackPanel Grid.Column="2">
                <!-- Card: Resumo -->
                <Border Background="{StaticResource CardBrush}" BorderBrush="{StaticResource CardBorder}" BorderThickness="1"
                        CornerRadius="12" Padding="14" Margin="0,0,0,12">
                    <StackPanel>
                        <TextBlock Text="Resumo" Style="{StaticResource SectionTitle}"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Status:" Grid.Row="0" Grid.Column="0" Style="{StaticResource MetaLabel}" Margin="0,0,8,6"/>
                            <TextBlock Text="{Binding Chamado.Status}" Grid.Row="0" Grid.Column="1" Style="{StaticResource MetaValue}" Margin="0,0,0,6"/>

                            <TextBlock Text="Criado em:" Grid.Row="1" Grid.Column="0" Style="{StaticResource MetaLabel}" Margin="0,0,8,6"/>
                            <TextBlock Text="{Binding Chamado.DataCriacao, StringFormat=dd/MM/yyyy HH:mm}" Grid.Row="1" Grid.Column="1" Style="{StaticResource MetaValue}" Margin="0,0,0,6"/>

                            <TextBlock Text="ID:" Grid.Row="2" Grid.Column="0" Style="{StaticResource MetaLabel}" Margin="0,0,8,0"/>
                            <TextBlock Text="{Binding Chamado.Id}" Grid.Row="2" Grid.Column="1" Style="{StaticResource MetaValue}"/>
                        </Grid>
                    </StackPanel>
                </Border>

                <!-- Card: Ações (admin) -->
                <Border Background="{StaticResource CardBrush}" BorderBrush="{StaticResource CardBorder}" BorderThickness="1"
                        CornerRadius="12" Padding="14"
                        Visibility="{Binding UsuarioLogado.EhAdmin, Converter={StaticResource BoolToVisibilityConverter}}">
                    <StackPanel>
                        <TextBlock Text="Ações" Style="{StaticResource SectionTitle}"/>

                        <Button Style="{StaticResource BtnSuccess}" Content="Assumir"
                                Command="{Binding AssumirCommand}" Margin="0,0,0,10"/>

                        <TextBlock Text="Alterar status" Margin="2,0,0,6" Foreground="#455A64"/>
                        <StackPanel Orientation="Horizontal">
                            <!-- ComboBox com os 7 status (nomes da enum para bind direto) -->
                            <ComboBox x:Name="StatusCombo"
                                      ItemsSource="{StaticResource StatusList}"
                                      SelectedItem="{Binding Chamado.Status, Mode=TwoWay}"
                                      Width="200" Margin="0,0,10,0"/>

                            <Button Style="{StaticResource BtnAttention}" Content="Alterar"
                                    Command="{Binding AlterarStatusCommand}"
                                    CommandParameter="{Binding SelectedItem, ElementName=StatusCombo}"
                                    Margin="0,0,10,0"/>

                            <!-- Voltar -->
                            <Button Style="{StaticResource BtnNeutral}" Content="Voltar"
                                    Click="Voltar_Click"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Grid>

        <!-- ===== Rodapé ===== -->
        <Border Grid.Row="2" Background="#EEF2F5" CornerRadius="10" Padding="8" Margin="0,12,0,0" BorderBrush="#E0E0E0" BorderThickness="1">
            <DockPanel>
                <TextBlock DockPanel.Dock="Left" Foreground="#607D8B" VerticalAlignment="Center"
                           Text="Dica: Ctrl+Enter envia o comentário."/>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal"/>
            </DockPanel>
        </Border>
    </Grid>

    <!-- Atalho Ctrl+Enter para enviar comentário -->
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="Enter" Command="{Binding AdicionarComentarioCommand}"/>
    </Window.InputBindings>
</Window>
