<Window x:Class="SistemaChamadosWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Sistema de Chamados"
        Height="500" Width="1000"
        WindowStartupLocation="CenterScreen"
        Background="#F5F6FA"
        Loaded="Window_Loaded">

    <!-- ====== Recursos (cores + estilos) ====== -->
    <Window.Resources>
        <!-- Paleta base -->
        <SolidColorBrush x:Key="BrandBlack" Color="#121212"/>
        <SolidColorBrush x:Key="BrandRed"   Color="#E53935"/>
        <SolidColorBrush x:Key="BrandRedDk" Color="#C62828"/>
        <SolidColorBrush x:Key="CardBrush"  Color="White"/>
        <SolidColorBrush x:Key="CardBorder" Color="#E0E0E0"/>

        <!-- Paleta (psicologia das cores) -->
        <SolidColorBrush x:Key="BluePrimary"  Color="#2962FF"/>
        <SolidColorBrush x:Key="BlueHover"    Color="#1E4BDB"/>
        <SolidColorBrush x:Key="BluePressed"  Color="#1539A8"/>

        <SolidColorBrush x:Key="GreenSuccess" Color="#43A047"/>
        <SolidColorBrush x:Key="GreenHover"   Color="#2E7D32"/>
        <SolidColorBrush x:Key="GreenPressed" Color="#1B5E20"/>

        <SolidColorBrush x:Key="AmberAttention" Color="#FB8C00"/>
        <SolidColorBrush x:Key="AmberHover"     Color="#EF6C00"/>
        <SolidColorBrush x:Key="AmberPressed"   Color="#E65100"/>

        <SolidColorBrush x:Key="NeutralGray"    Color="#607D8B"/>
        <SolidColorBrush x:Key="NeutralHover"   Color="#546E7A"/>
        <SolidColorBrush x:Key="NeutralPressed" Color="#455A64"/>

        <!-- Cabeçalho DataGrid -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource BrandBlack}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="36"/>
        </Style>

        <!-- 1 linha, sem quebra, com reticências -->
        <Style x:Key="CellOneLine" TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Células multi-linha -->
        <Style x:Key="CellTextBlock" TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="CellTextBlock2Lines" TargetType="TextBlock" BasedOn="{StaticResource CellTextBlock}">
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="LineHeight" Value="16"/>
            <Setter Property="MaxHeight" Value="32"/>
        </Style>

        <!-- Botões base + variantes -->
        <Style x:Key="AppButton" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#3949AB"/>
            <Setter Property="BorderBrush" Value="#1A000000"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="16,10"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="MinWidth" Value="110"/>
            <Setter Property="Margin" Value="6,0,0,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BtnPrimary" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource BluePrimary}"/>
        </Style>
        <Style x:Key="BtnSuccess" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource GreenSuccess}"/>
        </Style>
        <Style x:Key="BtnAttention" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource AmberAttention}"/>
        </Style>
        <Style x:Key="BtnDanger" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource BrandRed}"/>
        </Style>
        <Style x:Key="BtnNeutral" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Background" Value="{StaticResource NeutralGray}"/>
        </Style>

        <!-- Botão discreto para ações no grid (ajustado p/ caber na RowHeight=28) -->
        <Style x:Key="BtnSubtle" TargetType="Button" BasedOn="{StaticResource AppButton}">
            <Setter Property="Foreground" Value="#263238"/>
            <Setter Property="Background" Value="#ECEFF1"/>
            <Setter Property="BorderBrush" Value="#CFD8DC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="Normal"/>

            <!-- ajustes que resolvem o texto “pra baixo” -->
            <Setter Property="Height" Value="26"/>
            <Setter Property="Padding" Value="10,2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <!-- menor largura mínima para caber melhor no grid -->
            <Setter Property="MinWidth" Value="84"/>

            <Style.Resources>
                <SolidColorBrush x:Key="ButtonHoverBrush"   Color="#E0E6EA"/>
                <SolidColorBrush x:Key="ButtonPressedBrush" Color="#CFD8DC"/>
            </Style.Resources>
        </Style>


        <!-- Chip Status (Chamados) -->
        <DataTemplate x:Key="StatusChipTemplate">
            <Border x:Name="Chip" CornerRadius="10" Padding="8,3" Background="#EAECEF">
                <TextBlock x:Name="Txt" Text="{Binding Status}" FontWeight="SemiBold" Foreground="#222"/>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Aberto">
                    <Setter TargetName="Chip" Property="Background" Value="#E8F5E9"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#2E7D32"/>
                    <Setter TargetName="Txt"  Property="Text" Value="Aberto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="EmAndamento">
                    <Setter TargetName="Chip" Property="Background" Value="#FFF3E0"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#EF6C00"/>
                    <Setter TargetName="Txt"  Property="Text" Value="Em andamento"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Fechado">
                    <Setter TargetName="Chip" Property="Background" Value="#FFEBEE"/>
                    <Setter TargetName="Txt"  Property="Foreground" Value="#C62828"/>
                    <Setter TargetName="Txt"  Property="Text" Value="Fechado"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>

    <!-- ====== Layout ====== -->
    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Background="{StaticResource BrandBlack}" Padding="14" CornerRadius="12"
                Grid.Row="0" Margin="0,0,0,12">
            <DockPanel LastChildFill="True">
                <Image Width="28" Height="28" Source="/Assets/logo.png" Stretch="Uniform" Margin="0,0,10,0"/>
                <TextBlock Text="Kyodesk" Foreground="White" FontSize="16" FontWeight="SemiBold" Margin="0,0,12,0"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right">
                    <TextBlock Text="Bem-vindo, " Foreground="White" FontWeight="Bold"/>
                    <TextBlock Text="{Binding NomeUsuario}" Foreground="White" FontWeight="Bold"/>
                    <TextBlock Text=" (" Foreground="White"/>
                    <TextBlock Text="{Binding EmailUsuario}" Foreground="White"/>
                    <TextBlock Text=")" Foreground="White"/>
                </StackPanel>
            </DockPanel>
        </Border>

        <!-- Abas -->
        <TabControl Grid.Row="1"
                    Background="{StaticResource CardBrush}"
                    BorderBrush="{StaticResource CardBorder}"
                    BorderThickness="1"
                    Padding="0">

            <!-- ===== Sistema de chamados ===== -->
            <TabItem Header="Sistema de chamados">
                <Grid Background="{StaticResource CardBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <DataGrid Grid.Row="0"
                              ItemsSource="{Binding Chamados}"
                              SelectedItem="{Binding ChamadoSelecionado, Mode=TwoWay}"
                              AutoGenerateColumns="False"
                              SelectionChanged="DataGrid_SelectionChanged"
                              AlternatingRowBackground="#FFF5F5F5"
                              GridLinesVisibility="None"
                              HeadersVisibility="All"
                              AlternationCount="2"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              IsReadOnly="True"
                              Margin="6">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="60"/>
                            <DataGridTextColumn Header="Título" Binding="{Binding Titulo}" Width="220" ElementStyle="{StaticResource CellTextBlock}"/>
                            <DataGridTemplateColumn Header="Descrição" Width="260">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Descricao}" Style="{StaticResource CellTextBlock2Lines}">
                                            <TextBlock.ToolTip>
                                                <ToolTip Content="{Binding Descricao}"/>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Solicitante" Binding="{Binding Solicitante}" Width="160" ElementStyle="{StaticResource CellTextBlock}"/>
                            <DataGridTextColumn Header="Categoria" Binding="{Binding Categoria}" Width="140" ElementStyle="{StaticResource CellTextBlock}"/>
                            <DataGridTextColumn Header="Classificação" Binding="{Binding Classificacao}" Width="120" ElementStyle="{StaticResource CellTextBlock}"/>
                            <DataGridTemplateColumn Header="Status" Width="160">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource StatusChipTemplate}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Criado em" Binding="{Binding DataCriacao, StringFormat=dd/MM/yyyy HH:mm}" Width="140"/>
                            <DataGridTextColumn Header="Atualizado em" Binding="{Binding DataAtualizacao, TargetNullValue=—, StringFormat=dd/MM/yyyy HH:mm}" Width="140"/>
                            <DataGridTextColumn Header="Criador" Binding="{Binding Usuario.NomeCompleto, TargetNullValue=—}" Width="170"/>
                            <DataGridTextColumn Header="Responsável" Binding="{Binding Responsavel.NomeCompleto, TargetNullValue=—}" Width="170"/>
                            <DataGridTextColumn Header="Comentários" Binding="{Binding Comentarios.Count}" Width="110"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="6">
                        <Button Style="{StaticResource BtnPrimary}" Content="Atualizar" Command="{Binding AtualizarCommand}"/>
                        <Button Style="{StaticResource BtnSuccess}" Content="Novo" Command="{Binding NovoCommand}"/>
                        <Button Style="{StaticResource BtnAttention}" Content="Detalhes" Command="{Binding DetalhesCommand}" Click="Button_Click"/>
                        <Button Style="{StaticResource BtnDanger}" Content="Deslogar" Click="Deslogar_Click" Margin="2"/>
                    </StackPanel>
                </Grid>
            </TabItem>

            <!-- ===== Cofre de senhas (visível só p/ admin via code-behind) ===== -->
            <TabItem x:Name="TabCofre" Header="Cofre de senhas">
                <Grid Background="{StaticResource CardBrush}" Margin="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="360"/>
                        <ColumnDefinition Width="12"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Formulário -->
                    <Border CornerRadius="10" BorderBrush="{StaticResource CardBorder}" BorderThickness="1" Padding="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
                                <StackPanel>
                                    <TextBlock Text="Novo registro" FontWeight="Bold" FontSize="14" Margin="0,0,0,8"/>

                                    <TextBlock Text="Nome"/>
                                    <TextBox x:Name="CofreNomeText" Margin="0,2,0,8"/>

                                    <TextBlock Text="Usuário / E-mail"/>
                                    <TextBox x:Name="CofreUsuarioText" Margin="0,2,0,8"/>

                                    <TextBlock Text="Senha"/>
                                    <PasswordBox x:Name="CofreSenhaBox" Margin="0,2,0,8"/>

                                    <TextBlock Text="URL (opcional)"/>
                                    <TextBox x:Name="CofreUrlText" Margin="0,2,0,8"/>

                                    <TextBlock Text="Observações (opcional)"/>
                                    <TextBox x:Name="CofreObsText" AcceptsReturn="True" Height="80" TextWrapping="Wrap" Margin="0,2,0,12"/>

                                    <TextBlock Text="Dica: para produção, criptografe as senhas (DPAPI/AES) antes de salvar."
                                               Foreground="#666" FontSize="11" Margin="0,4,0,0"/>
                                </StackPanel>
                            </ScrollViewer>

                            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                                <Button x:Name="BtnCofreLimpar" Style="{StaticResource BtnNeutral}" Content="Limpar" Click="CofreLimpar_Click"/>
                                <Button x:Name="BtnCofreSalvar" Style="{StaticResource BtnSuccess}" Content="Salvar" Margin="6,0,0,0" Click="CofreSalvar_Click"/>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <!-- Lista -->
                    <Border Grid.Column="2" CornerRadius="10" BorderBrush="{StaticResource CardBorder}" BorderThickness="1" Padding="10">
                        <DataGrid x:Name="CofreGrid"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  IsReadOnly="True"
                                  AlternatingRowBackground="#FFF5F5F5"
                                  GridLinesVisibility="None"
                                  HeadersVisibility="All"
                                  AlternationCount="2"
                                  RowHeight="28"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  ScrollViewer.CanContentScroll="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Nome" Binding="{Binding Nome}" Width="260" ElementStyle="{StaticResource CellOneLine}"/>
                                <DataGridTextColumn Header="Usuário" Binding="{Binding Usuario}" Width="260" ElementStyle="{StaticResource CellOneLine}"/>

                                <!-- Senha mascarada -->
                                <DataGridTemplateColumn Header="Senha" Width="140">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="••••••••" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn Header="URL" Binding="{Binding Url}" Width="420" ElementStyle="{StaticResource CellOneLine}"/>

                                <!-- Ações: Exibir e Copiar (discretos) -->
                                <DataGridTemplateColumn Header="Ações" Width="190">
                                    <!-- garante alinhamento à esquerda dentro da célula -->
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>

                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="Copiar"
                                            Style="{StaticResource BtnSubtle}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            Margin="6,0,0,0"
                                            Tag="{Binding Id}"
                                            ToolTip="Copiar a senha para a área de transferência"
                                            Click="CofreCopiarSenha_Click"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                </Grid>
            </TabItem>

            <!-- ===== Base de conhecimentos ===== -->
            <TabItem Header="Base de conhecimentos">
                <Grid Background="{StaticResource CardBrush}" Margin="6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <DockPanel Margin="0,0,0,8">
                        <!-- Busca com placeholder -->
                        <Grid Width="300" Height="28" Margin="0,0,8,0">
                            <TextBox x:Name="KbSearchBox" VerticalContentAlignment="Center" Padding="6,0,6,0"/>
                            <TextBlock Text="Pesquisar artigos..." Foreground="#999" Margin="8,0,0,0"
                                       VerticalAlignment="Center" IsHitTestVisible="False">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Text, ElementName=KbSearchBox}" Value=""/>
                                                    <Condition Binding="{Binding IsKeyboardFocused, ElementName=KbSearchBox}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>

                        <ComboBox Width="180" Height="28">
                            <ComboBoxItem Content="Todos os temas" IsSelected="True"/>
                            <ComboBoxItem Content="Infraestrutura"/>
                            <ComboBoxItem Content="Sistemas"/>
                            <ComboBoxItem Content="Protheus"/>
                            <ComboBoxItem Content="Redes"/>
                        </ComboBox>

                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                            <Button Style="{StaticResource BtnPrimary}" Content="Pesquisar"/>
                            <Button x:Name="BtnNovoChamado"
                                Style="{StaticResource BtnSuccess}"
                                Content="Novo Artigo"
                                Click="AbrirNovoArtigo_Click"/>

                        </StackPanel>
                    </DockPanel>

                    <Border Grid.Row="1" CornerRadius="10" BorderBrush="{StaticResource CardBorder}" BorderThickness="1" Padding="10">
                        <ListView>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Título" Width="320" DisplayMemberBinding="{Binding Titulo}"/>
                                    <GridViewColumn Header="Categoria" Width="160" DisplayMemberBinding="{Binding Categoria}"/>
                                    <GridViewColumn Header="Atualizado em" Width="140" DisplayMemberBinding="{Binding AtualizadoEm}"/>
                                    <GridViewColumn Header="Autor" Width="200" DisplayMemberBinding="{Binding Autor}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
